{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","updateGoods","goods","visibleGoods","sort","g1","g2","localeCompare","length","getReorderedGoods","goodStyle","backgroundColor","maxWidth","borderRadius","reversedStyle","className","type","classNames","onClick","map","good","style","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAACL,GAAD,MAAY,CAAEC,YAAaD,EAAMC,gBAfnD,EAkBES,MAAQ,WACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KArBlB,4CAyBE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA1DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQf,GACN,KAAKL,EAASS,SACZ,OAAOU,EAAGE,cAAcD,GAC1B,KAAKpB,EAASW,OACZ,OAAOQ,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITlB,GACFa,EAAaL,UAGRK,EAmCeM,CAAkBtB,EAAiB,CACrDI,WACAD,eAGIoB,EAAY,CAChBC,gBAAiB,UACjBC,SAAU,cACVC,aAAc,QAGVC,EAAgB,CACpBH,gBAAiB,UACjBC,SAAU,cACVC,aAAc,QAGhB,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,0BAA2B1B,IAAaL,EAASS,WACrDuB,QAASlB,KAAKP,eAJhB,iCASA,wBACEuB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,6BAA8B1B,IAAaL,EAASW,SACxDqB,QAASlB,KAAKJ,aAJhB,4BASA,wBACEoB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,8BAA+B3B,IACnC4B,QAASlB,KAAKF,QAJhB,uBASiB,IAAfR,GAAwBC,IAAaL,EAASM,OAC9C,wBACEwB,KAAK,SACLD,UAAU,4BACVG,QAASlB,KAAKD,MAHhB,sBASJ,6BACE,6BACGE,EAAYkB,KAAI,SAACC,GAAD,OACf,oBAEE,UAAQ,OACRC,MAAQ/B,EAAawB,EAAgBJ,EAHvC,SAKGU,GAJIA,iBAxFrB,GAAyBE,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.339a51f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { sortType, isReversed } = this.state;\n    const updateGoods = getReorderedGoods(goodsFromServer, {\n      sortType,\n      isReversed,\n    });\n\n    const goodStyle = {\n      backgroundColor: '#eff5fb',\n      maxWidth: 'max-content',\n      borderRadius: '20px'\n    };\n\n    const reversedStyle = {\n      backgroundColor: '#fee08a',\n      maxWidth: 'max-content',\n      borderRadius: '20px'\n    };\n    \n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'button is-info is-light': sortType !== SortType.ALPHABET })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'button is-success is-light': sortType !== SortType.LENGTH })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'button is-warning is-light': !isReversed })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed !== false || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          <ul>\n            {updateGoods.map((good) => (\n              <li \n                key={good}\n                data-cy=\"Good\"\n                style={ isReversed ? reversedStyle : goodStyle}  \n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}